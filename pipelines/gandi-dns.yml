trigger:
- master

resources:
- repo: self
variables:
  tag: '$(Build.BuildId)'

stages:
#- stage: Test_trivy
#  displayName: 'Trivy test'
#  pool:
#      name: Default
#  jobs:
#  - job: Test_with_trivy
#    steps:
#    - task: trivy@1
#      inputs:
#        version: 'latest'
#        path: '.'

- stage:  Build
  displayName: Build new img
  pool:
      name: Default
  jobs:
  - job: Build
    displayName: Build
    steps:
    #- task: Docker@2
    #  displayName: Build an image
    #  inputs:
    #    containerRegistry: 'my_dockerHub'
    #    repository: 'gandi'
    #    command: 'build'
    #    Dockerfile: '**/Dockerfile'
    #    arguments: '-t bogdanioanliviu/gandi:$(Build.BuildId)'
    - task: Bash@3
      displayName: Scan img trivy
      inputs:
        targetType: 'inline'
        script: |
          docker run --rm  -v /var/run/docker.sock:/var/run/docker.sock -v /home/bil/.docker:/root/.docker -v $PWD:/src --workdir /src aquasec/trivy:latest image --exit-code 1 --format template --template "@templates/junit.tpl" --output /src/junit-report.xml --security-checks vuln,config,secret gandi:487
    
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/junit-*.xml'
        mergeTestResults: true
        failTaskOnFailedTests: true
        testRunTitle: 'trivy-gandi'
      condition: 'always()'
    #- task: trivy@1
    #  displayName: Scan img trivy
    #  inputs:
    #    version: 'latest'
    #    image: 'bogdanioanliviu/gandi:$(Build.BuildId)'
    #- task: Docker@2
    #  inputs:
    #    containerRegistry: 'my_dockerHub'
    #    repository: 'bogdanioanliviu/gandi'
    #    command: 'push'
    #    tags: '$(Build.BuildId)'
